{"active":false,"connections":{"Null":{"main":[[{"node":"Array","type":"main","index":0}]]},"Array":{"main":[[{"node":"Object","type":"main","index":0}]]},"Number":{"main":[[{"node":"Boolean","type":"main","index":0}]]},"Object":{"main":[[{"node":"Using JSON (Expressions)","type":"main","index":0}]]},"String":{"main":[[{"node":"Number","type":"main","index":0}]]},"Boolean":{"main":[[{"node":"Null","type":"main","index":0}]]},"Key & Value":{"main":[[{"node":"String","type":"main","index":0}]]},"Execute to Start":{"main":[[{"node":"Key & Value","type":"main","index":0}]]},"Using JSON (Expressions)":{"main":[[{"node":"Final Exam","type":"main","index":0}]]}},"createdAt":"2025-07-24T13:08:57.280Z","id":"dXyp8iEZZZ8J9cZW","isArchived":false,"meta":null,"name":"Tutorial - What is JSON","nodes":[{"parameters":{},"id":"d7d3be23-6e4a-4b81-853d-011da8a9dbfa","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Execute to Start","type":"n8n-nodes-base.manualTrigger","creator":"Lucas Peyrin","position":[-3040,1120],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"assignments":{"assignments":[{"id":"e87952cb-878e-4feb-8261-342eaf887838","name":"json_example_string","type":"string","value":"This is a simple string. In JSON, it's always enclosed in double quotes."}]},"options":{}},"id":"42759fb5-28a7-4d0e-b9d6-97484cd0a7fa","cid":"Ikx1Y2FzIFBleXJpbiI","name":"String","type":"n8n-nodes-base.set","creator":"Lucas Peyrin","position":[-2400,1120],"typeVersion":3.4,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"mode":"raw","options":{}},"id":"52e91370-1236-41bd-a21c-b126e524125e","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Key & Value","type":"n8n-nodes-base.set","creator":"Lucas Peyrin","position":[-2680,1120],"typeVersion":3.4,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"assignments":{"assignments":[{"id":"e87952cb-878e-4feb-8261-342eaf887838","name":"json_example_integer","type":"number","value":10},{"id":"12345","name":"json_example_float","type":"number","value":12.5}]},"options":{}},"id":"13e6789d-dba9-416a-abaf-e662cd7d69a7","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Number","type":"n8n-nodes-base.set","creator":"Lucas Peyrin","position":[-2120,1120],"typeVersion":3.4,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"assignments":{"assignments":[{"id":"e87952cb-878e-4feb-8261-342eaf887838","name":"json_example_boolean","type":"boolean","value":false}]},"options":{}},"id":"83195271-d46b-456d-bd4b-1d5b23d41f97","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Boolean","type":"n8n-nodes-base.set","creator":"Lucas Peyrin","position":[-1820,1120],"typeVersion":3.4,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"assignments":{"assignments":[{"id":"e87952cb-878e-4feb-8261-342eaf887838","name":"json_example_array","type":"array","value":"[\"first element\", 2, false, null]"}]},"options":{}},"id":"219885fc-e635-4c19-b89e-33013f856d26","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Array","type":"n8n-nodes-base.set","creator":"Lucas Peyrin","position":[-1240,1120],"typeVersion":3.4,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"assignments":{"assignments":[{"id":"e87952cb-878e-4feb-8261-342eaf887838","name":"json_example_object","type":"object","value":"{\"key\":\"value\",\"array\":[1,2,3],\"boolean\":false,\"integer\":123,\"sub_object\":{\"sub_key\":\"Find me!\"}}"}]},"options":{}},"id":"93ba3500-5b51-441e-bc6c-d4a4bdfbfc6c","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Object","type":"n8n-nodes-base.set","creator":"Lucas Peyrin","position":[-940,1120],"typeVersion":3.4,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"## Tutorial - What is JSON?\n\nWelcome! This workflow will teach you the basics of JSON, the language that apps and n8n nodes use to exchange information.\n\n**What is JSON?**\nImagine a contact card:\n- **Name:** John Doe\n- **Age:** 30\n- **Has Children:** Yes\n- **Phone Numbers:** [\"555-1234\", \"555-5678\"]\n\n\nJSON is just a way of writing this down so a computer can understand it perfectly.\n\n**How to use this tutorial:**\n1.  Click **\"Execute Workflow\"** button.\n2.  Click on each node, one by one, in order.\n3.  Look at the node's output in the panel on the right and read the associated sticky note to understand what's happening.","height":656,"width":460},"id":"0599f60b-cc18-4651-9f3d-4e599750a54c","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-3260,640],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"#### The Heart of JSON: Key & Value\n\nEverything in JSON is built on this pair:\n- A **Key** (the name of the data, always in double quotes `\"`).\n- A **Value** (the data itself).\n\n\n`\"key\": \"value\"`\n\nIn this node's output, you see two key/value pairs. This is the basic building block for everything that follows.","height":516,"width":260,"color":7},"id":"75d3c2e2-7176-46b7-92cc-c4495e5848e7","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-2760,780],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"#### Data Type: String\n\nA string is simply **text**.\n- **Syntax:** The text is always enclosed in double quotes `\" \"`.\n\n\nLook at the output: the value of `json_example_string` is the text we defined.","height":516,"width":260,"color":7},"id":"ad169c0e-7923-4c90-aaee-cf14fccbf4e4","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-2480,780],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"#### Data Type: Number\n\nThis is simply a number. It can be a whole number (integer) like 10, or a decimal (float) like 12.5.\n- **Syntax:** Just write the number directly, **WITHOUT quotes**.\n\n\n`\"age\": 30` (Correct)\n`\"age\": \"30\"` (Incorrect, this is a String!)\n\nThis distinction is crucial for doing math!","height":516,"width":260,"color":7},"id":"c44bc4a9-27f6-4286-be0c-6ad092c8bda0","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-2200,780],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"#### Data Type: Boolean\n\nThis is a value that can only be **TRUE** or **FALSE**.\n- **Syntax:** `true` or `false` (always lowercase and **WITHOUT quotes**).\n\n\nThink of it like a light switch: on (`true`) or off (`false`). It's very useful for conditions (If/Then logic).","height":516,"width":260,"color":7},"id":"10178bf5-9225-46bc-aa41-06d4592b0859","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-1900,780],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"#### Data Type: Array\n\nAn array is an **ordered list** of items.\n- **Syntax:** Starts with `[` and ends with `]`. Items are separated by commas.\n\n\nAn array can hold anything: strings, numbers, booleans, and even other arrays or objects!","height":516,"width":260,"color":7},"id":"02430b73-5069-4733-a0e5-e0756870b2d1","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-1320,780],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"#### Data Type: Object (JSON Object)\n\nThis is the main concept! An object is a **collection of key/value pairs**.\n- **Syntax:** Starts with `{` and ends with `}`.\n\n\nThis is what allows us to structure complex data, like our contact card from the beginning. Notice how this object contains all the other data types we've seen!","height":516,"width":280,"color":7},"id":"16a0d6c2-9518-4aa2-9149-b23be6321e75","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-1040,780],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"assignments":{"assignments":[{"id":"e87952cb-878e-4feb-8261-342eaf887838","name":"json_example_null","type":"null","value":{}}]},"options":{}},"id":"324af100-1008-4cea-9ee0-f5bbd7017516","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Null","type":"n8n-nodes-base.set","creator":"Lucas Peyrin","position":[-1540,1120],"typeVersion":3.4,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"#### Data Type: Null\n\nThis special type means \"nothing,\" \"no value,\" or \"empty.\"\n- **Syntax:** `null` (lowercase and **WITHOUT quotes**).\n\n\nIt's different from `0` (which is a number) or `\"\"` (which is an empty string). `null` is the intentional absence of a value.","height":516,"width":260,"color":7},"id":"4d5c4d33-dae6-4ad8-9f58-3658ff3e77e3","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-1620,780],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"assignments":{"assignments":[{"id":"e87952cb-878e-4feb-8261-342eaf887838","name":"message","type":"string","value":"=Hello, the number from the tutorial is: {{ $('Number').item.json.json_example_integer }}"},{"id":"61f385f4-b8e2-4c69-b873-9ffc3ab3fe94","name":"sub_key","type":"string","value":"={{ $json.json_example_object.sub_object.sub_key }}"},{"id":"bd752a0f-64bf-44b1-b39b-fca28e86aa5b","name":"array_second_item","type":"string","value":"={{ $json.json_example_object.array[1] }}"}]},"options":{}},"id":"4b2d7af8-48e1-47cb-a731-8d85dfb54ea2","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Using JSON (Expressions)","type":"n8n-nodes-base.set","creator":"Lucas Peyrin","position":[-600,1120],"typeVersion":3.4,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"#### ⭐ THE KEY STEP: Using JSON in n8n!\n\nNow for the magic. How do you use data from a previous node? With **expressions** `{{ }}`.\n\nThis node creates a custom message. Look at the value of the `message` field:\n`Hello, the number from the tutorial is: {{ $('Number').item.json.json_example_integer }}`\n\nIt dynamically pulled the number `10` from the \"Number\" node! This is how you make your nodes talk to each other.","height":516,"width":340,"color":5},"id":"92988a4e-6da5-4b0e-8a41-77c09b95543b","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-740,780],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"assignments":{"assignments":[{"id":"e87952cb-878e-4feb-8261-342eaf887838","name":"summary_string","type":"string","value":"={{ $('String').item.json.json_example_string }}"},{"id":"12345","name":"summary_number","type":"number","value":"={{ $('Number').item.json.json_example_integer }}"},{"id":"67890","name":"summary_boolean","type":"boolean","value":"={{ $('Boolean').item.json.json_example_boolean }}"},{"id":"abcde","name":"summary_null","type":"null","value":"={{ $('Null').item.json.json_example_null }}"},{"id":"fghij","name":"summary_array","type":"array","value":"={{ $('Array').item.json.json_example_array }}"},{"id":"klmno","name":"summary_object","type":"object","value":"={{ $('Object').item.json.json_example_object }}"}]},"options":{}},"id":"ad827f28-9e59-4aa3-b46f-eb660add92a5","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Final Exam","type":"n8n-nodes-base.set","creator":"Lucas Peyrin","position":[-260,1120],"typeVersion":3.4,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"#### 🎓 FINAL EXAM: Putting It All Together\n\nThis last node creates a final object by using expressions to pull data from **all the previous nodes**.\n\nClick on this node and look at the expressions in each field. It's a perfect summary of everything you've learned.\n\n**Congratulations! You now understand the basics of JSON and how to use it in n8n.**","height":516,"width":340,"color":6},"id":"91027b03-d033-47ed-bfe5-40350c42cdab","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note9","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-360,780],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"## Was this helpful? Let me know!\n[![clic](https://supastudio.ia2s.app/storage/v1/object/public/assets/n8n/clic_down_lucas.gif)](https://n8n.ac)\n\nI really hope this tutorial helped you understand JSON better. Your feedback is incredibly valuable and helps me create better resources for the n8n community.\n\n### **Share Your Thoughts & Ideas**\n\nWhether you have a suggestion, found a typo, or just want to say thanks, I'd love to hear from you!\nHere's a simple n8n form built for this purpose:\n\n#### ➡️ **[Click here to give feedback](https://api.ia2s.app/form/templates/feedback?template=JSON%20Tutorial)**\n\n### **Ready to Build Something Great?**\n\nIf you're looking to take your n8n skills or business automation to the next level, I can help.\n\n**🎓 n8n Coaching:** Want to become an n8n pro? I offer one-on-one coaching sessions to help you master workflows, tackle specific problems, and build with confidence.\n#### ➡️ **[Book a Coaching Session](https://api.ia2s.app/form/templates/coaching?template=JSON%20Tutorial)**\n\n**💼 n8n Consulting:** Have a complex project, an integration challenge, or need a custom workflow built for your business? Let's work together to create a powerful automation solution.\n#### ➡️ **[Inquire About Consulting Services](https://api.ia2s.app/form/templates/consulting?template=JSON%20Tutorial)**\n\n---\n\nHappy Automating!\nLucas Peyrin | [n8n Academy](https://n8n.ac)","height":1300,"width":540,"color":3},"id":"1ea04ec5-0d38-46dd-b4e7-a0269d7a50a8","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note10","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[0,0],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"## [Video Tutorial](https://youtu.be/PAmgrwYnzWs?si=yXG1oHIL3UiBcAPa)\n@[youtube](PAmgrwYnzWs)","height":300,"width":460,"color":2},"id":"79fe82cf-6ccf-4b56-82f3-fb70b3c2b04a","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note11","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-3260,320],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"[![Execute Workflow](https://supastudio.ia2s.app/storage/v1/object/public/assets/n8n/execute_workflow_json_tutorial.gif)](https://www.youtube.com/watch?v=PAmgrwYnzWs)","height":392,"width":576,"color":7},"id":"367d1f5b-6a7b-4c5e-bf5a-c3c8b6f21a27","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note14","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-2760,360],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"},{"parameters":{"content":"## [>> Go to Eval Workflow <<](https://n8n.io/workflows/6232)\n\nVerify your skills with a complete eval workflow to put your JSON Skills to the test.\n[![Test Skills](https://supastudio.ia2s.app/storage/v1/object/public/assets/n8n/test_your_skillls_button.gif)](https://n8n.io/workflows/6232)","height":312,"width":336,"color":6},"id":"4052b423-b518-4526-bbe4-ce11248d027b","cid":"Ikx1Y2FzIFBleXJpbiI","name":"Sticky Note15","type":"n8n-nodes-base.stickyNote","creator":"Lucas Peyrin","position":[-360,440],"typeVersion":1,"notes":"© 2025 Lucas Peyrin"}],"origin":"n8n","pinData":{},"repo":{"owner":"n8nlinx","name":"BACKUP-N8N-LINX"},"settings":{"executionOrder":"v1"},"shared":[{"createdAt":"2025-07-24T13:08:57.280Z","updatedAt":"2025-07-24T13:08:57.280Z","role":"workflow:owner","workflowId":"dXyp8iEZZZ8J9cZW","projectId":"O23OujEZlQpGdaol"}],"staticData":null,"tags":[],"triggerCount":0,"updatedAt":"2025-07-24T14:43:33.728Z","versionId":"3093b5c5-d364-4ba3-9e9d-c6e04faea778"}